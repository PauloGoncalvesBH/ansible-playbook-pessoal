---
- name: Add a setting to ~/.gitconfig
  community.general.git_config:
    name: alias.teste
    scope: global
    value: commita

- name: Read all values from git config
  community.general.git_config:
    list_all: yes
    scope: global
  register: a

- name: print all returned values
  debug:
    msg: "{{ a }}"


# - name: Update apt
#   apt: update_cache=yes

# - name: Add a setting to ~/.gitconfig
#   community.general.git_config:
#     name: alias.st
#     scope: global
#     value: status

# - name: Remove a setting from ~/.gitconfig
#   community.general.git_config:
#     name: alias.ci
#     scope: global
#     state: absent

# - name: Add a setting to ~/.gitconfig
#   community.general.git_config:
#     name: core.editor
#     scope: global
#     value: vim

# - name: Add a setting system-wide
#   community.general.git_config:
#     name: alias.remotev
#     scope: system
#     value: remote -v

# - name: Add a setting to a system scope (default)
#   community.general.git_config:
#     name: alias.diffc
#     value: diff --cached

# - name: Add a setting to a system scope (default)
#   community.general.git_config:
#     name: color.ui
#     value: auto

# - name: Make etckeeper not complaining when it is invoked by cron
#   community.general.git_config:
#     name: user.email
#     repo: /etc
#     scope: local
#     value: 'root@{{ ansible_fqdn }}'

# - name: Read individual values from git config
#   community.general.git_config:
#     name: alias.ci
#     scope: global

# - name: Scope system is also assumed when reading values, unless list_all=yes
#   community.general.git_config:
#     name: alias.diffc

# - name: Read all values from git config
#   community.general.git_config:
#     list_all: yes
#     scope: global

# - name: When list_all is yes and no scope is specified, you get configuration from all scopes
#   community.general.git_config:
#     list_all: yes

# - name: Specify a repository to include local settings
#   community.general.git_config:
#     list_all: yes
#     repo: /path/to/repo.git
